diff -c -r e-uae-0.8.29-WIP4.orig/configure.in e-uae-0.8.29-WIP4/configure.in
*** e-uae-0.8.29-WIP4.orig/configure.in	Wed Mar 28 02:41:28 2007
--- e-uae-0.8.29-WIP4/configure.in	Mon Apr  4 00:53:25 2011
***************
*** 401,407 ****
  dnl
  dnl  Generic default targets
  dnl
! TARGET=x11
  TARGETDEP=t-unix.h
  if [[ "$HAVE_PTHREAD" = "yes" ]]; then
    THREADDEP=td-posix
--- 401,407 ----
  dnl
  dnl  Generic default targets
  dnl
! TARGET=svga
  TARGETDEP=t-unix.h
  if [[ "$HAVE_PTHREAD" = "yes" ]]; then
    THREADDEP=td-posix
diff -c -r e-uae-0.8.29-WIP4.orig/src/include/custom.h e-uae-0.8.29-WIP4/src/include/custom.h
*** e-uae-0.8.29-WIP4.orig/src/include/custom.h	Tue Dec 12 04:30:12 2006
--- e-uae-0.8.29-WIP4/src/include/custom.h	Wed Jun  8 01:33:20 2011
***************
*** 181,183 ****
--- 181,185 ----
  extern void hsync_handler (void);
  extern void copper_handler (void);
  #define HSYNCTIME (maxhpos * CYCLE_UNIT)
+ 
+ char keymapping[256];
diff -c -r e-uae-0.8.29-WIP4.orig/src/include/keyboard.h e-uae-0.8.29-WIP4/src/include/keyboard.h
*** e-uae-0.8.29-WIP4.orig/src/include/keyboard.h	Mon Sep 12 07:00:35 2005
--- e-uae-0.8.29-WIP4/src/include/keyboard.h	Tue Jun  7 00:18:02 2011
***************
*** 35,47 ****
--- 35,50 ----
  #define AK_U 0x16
  #define AK_V 0x34
  #define AK_W 0x11
+ // #define AK_W 0x43 // hack - right pinball button as ENTER
  #define AK_X 0x32
  #define AK_Y 0x15
  #define AK_Z 0x31
  
  #define AK_0 0x0A
  #define AK_1 0x01
+ // #define AK_1 0x59 // hack - 1UP button is F10
  #define AK_2 0x02
+ // #define AK_2 0x5D // hack - 2UP is PrtSrc 
  #define AK_3 0x03
  #define AK_4 0x04
  #define AK_5 0x05
diff -c -r e-uae-0.8.29-WIP4.orig/src/inputdevice.c e-uae-0.8.29-WIP4/src/inputdevice.c
*** e-uae-0.8.29-WIP4.orig/src/inputdevice.c	Fri Feb 16 05:24:29 2007
--- e-uae-0.8.29-WIP4/src/inputdevice.c	Mon Jun 13 13:37:22 2011
***************
*** 1007,1015 ****
      inputcode_pending_state = state;
  }
  
! void inputdevice_do_keyboard (int code, int state)
  {
!     if (code < 0x80) {
  	uae_u8 key = code | (state ? 0x00 : 0x80);
  	keybuf[key & 0x7f] = (key & 0x80) ? 0 : 1;
  	if (((keybuf[AK_CTRL] || keybuf[AK_RCTRL]) && keybuf[AK_LAMI] && keybuf[AK_RAMI]) || key == AK_RESETWARNING) {
--- 1007,1022 ----
      inputcode_pending_state = state;
  }
  
! void inputdevice_do_keyboard (int icode, int state)
  {
! int k,code=icode;
! 
!     if (icode < 0x80) {
! 
! 	code=keymapping[icode];
! 
!         write_log ("inputdevice original/new code: %d/%d state: %d\n",icode,code,state);
! 
  	uae_u8 key = code | (state ? 0x00 : 0x80);
  	keybuf[key & 0x7f] = (key & 0x80) ? 0 : 1;
  	if (((keybuf[AK_CTRL] || keybuf[AK_RCTRL]) && keybuf[AK_LAMI] && keybuf[AK_RAMI]) || key == AK_RESETWARNING) {
***************
*** 1017,1026 ****
  	    memset (keybuf, 0, sizeof (keybuf));
  	    uae_reset (r);
  	}
! 	record_key ((uae_u8)((key << 1) | (key >> 7)));
  	return;
      }
!     inputdevice_add_inputcode (code, state);
  }
  
  void inputdevice_handle_inputcode (void)
--- 1024,1036 ----
  	    memset (keybuf, 0, sizeof (keybuf));
  	    uae_reset (r);
  	}
! 	k=(uae_u8)((key << 1) | (key >> 7));
! 
! 	record_key (k);
  	return;
      }
! 
!     inputdevice_add_inputcode (icode, state);
  }
  
  void inputdevice_handle_inputcode (void)
***************
*** 1207,1212 ****
--- 1217,1225 ----
  	else
  	    queue_input_event (nr, -1, 0, 0, 1);
      }
+ 
+     // write_log ("Got input event from unit %d, type %d, data %d\n", ie->unit,ie->type,ie->data);
+ 
      switch (ie->unit)
      {
  	break;
Only in e-uae-0.8.29-WIP4/src: inputdevice.o
diff -c -r e-uae-0.8.29-WIP4.orig/src/keybuf.c e-uae-0.8.29-WIP4/src/keybuf.c
*** e-uae-0.8.29-WIP4.orig/src/keybuf.c	Wed Jul 26 21:36:59 2006
--- e-uae-0.8.29-WIP4/src/keybuf.c	Mon Jun 13 13:37:00 2011
***************
*** 76,82 ****
      int k = kc >> 1;
      int b = !(kc & 1);
  
!     //write_log ("got kc %02.2X\n", ((kc << 7) | (kc >> 1)) & 0xff);
      if (kpb_next == 256)
  	kpb_next = 0;
      if (kpb_next == kpb_last) {
--- 76,82 ----
      int k = kc >> 1;
      int b = !(kc & 1);
  
!     // write_log ("got kc %02.2X (dec: %d)\n", ((kc << 7) | (kc >> 1)) & 0xff,  ((kc << 7) | (kc >> 1)) & 0xff);
      if (kpb_next == 256)
  	kpb_next = 0;
      if (kpb_next == kpb_last) {
***************
*** 107,228 ****
      if (fs_se != 0) {
  	switch (k) {
  	case AK_T: fs = 1; fs_se[0] = b; break;
! 	case AK_F: fs = 1; fs_se[1] = b; break;
! 	case AK_H: fs = 1; fs_se[2] = b; break;
! 	case AK_B: fs = 1; fs_se[3] = b; break;
! 	case AK_LALT: fs = 1; fs_se[4] = b; break;
! 	case AK_LSH: fs = 1; fs_se[5] = b; break;
! 	}
!     }
  #ifdef ARCADIA
!     if (fs_xa1 != 0) {
! 	switch (k) {
! 	case AK_NP8: fs = 1; fs_xa1[0] = b; break;
! 	case AK_NP4: fs = 1; fs_xa1[1] = b; break;
! 	case AK_NP6: fs = 1; fs_xa1[2] = b; break;
! 	case AK_NP2: case AK_NP5: fs = 1; fs_xa1[3] = b; break;
! 	case AK_CTRL: fs = 1; fs_xa1[4] = b; break;
! 	case AK_LALT: fs = 1; fs_xa1[5] = b; break;
! 	case AK_SPC: fs = 1; fs_xa1[6] = b; break;
! 	}
!     }
!     if (fs_xa2 != 0) {
! 	switch (k) {
! 	case AK_R: fs = 1; fs_xa2[0] = b; break;
! 	case AK_D: fs = 1; fs_xa2[1] = b; break;
! 	case AK_G: fs = 1; fs_xa2[2] = b; break;
! 	case AK_F: fs = 1; fs_xa2[3] = b; break;
! 	case AK_A: fs = 1; fs_xa2[4] = b; break;
! 	case AK_S: fs = 1; fs_xa2[5] = b; break;
! 	case AK_Q: fs = 1; fs_xa2[6] = b; break;
! 	}
!     }
  #endif
!     if (fs && currprefs.input_selected_setting == 0) {
! 	if (JSEM_ISANYKBD (0, &currprefs))
! 	    do_fake (0);
! 	if (JSEM_ISANYKBD (1, &currprefs))
! 	    do_fake (1);
! 	return;
!     } else {
! 	if ((kc >> 1) == AK_RCTRL) {
! 	    kc ^= AK_RCTRL << 1;
! 	    kc ^= AK_CTRL << 1;
! 	}
  #ifdef ARCADIA
! 	if (fs_xa1 || fs_xa2) {
! 	    int k2 = k;
! 	    if (k == AK_1)
! 		k2 = AK_F1;
! 	    if (k == AK_2)
! 		k2 = AK_F2;
! 	    if (k == AK_3)
! 		k2 = AK_LALT;
! 	    if (k == AK_4)
! 		k2 = AK_RALT;
! 	    if (k == AK_6)
! 		k2 = AK_DN;
! 	    if (k == AK_LBRACKET || k == AK_LSH)
! 		k2 = AK_SPC;
! 	    if (k == AK_RBRACKET)
! 		k2 = AK_RET;
! 	    if (k == AK_C)
! 		k2 = AK_1;
! 	    if (k == AK_5)
! 		k2 = AK_2;
! 	    if (k == AK_Z)
! 		k2 = AK_3;
! 	    if (k == AK_X)
! 		k2 = AK_4;
! 	    if (k != k2)
! 		kc = (k2 << 1) | (b ? 0 : 1);
! 	}
  #endif
!     }
  
!     keybuf[kpb_first] = kc;
!     kpb_first = kpb_next;
  }
  
  void joystick_setting_changed (void)
  {
!     fs_np = fs_ck = fs_se = 0;
  #ifdef ARCADIA
!     fs_xa1 = fs_xa2 = 0;
  #endif
  
!     if (JSEM_ISNUMPAD (0, &currprefs))
! 	fs_np = fakestate[0];
!     else if (JSEM_ISNUMPAD (1, &currprefs))
! 	fs_np = fakestate[1];
! 
!     if (JSEM_ISCURSOR (0, &currprefs))
! 	fs_ck = fakestate[0];
!     else if (JSEM_ISCURSOR (1, &currprefs))
! 	fs_ck = fakestate[1];
! 
!     if (JSEM_ISSOMEWHEREELSE (0, &currprefs))
! 	fs_se = fakestate[0];
!     else if (JSEM_ISSOMEWHEREELSE (1, &currprefs))
! 	fs_se = fakestate[1];
  
  #ifdef ARCADIA
!     if (JSEM_ISXARCADE1 (0, &currprefs))
! 	fs_xa1 = fakestate[0];
!     else if (JSEM_ISXARCADE1 (1, &currprefs))
! 	fs_xa1 = fakestate[1];
! 
!     if (JSEM_ISXARCADE2 (0, &currprefs))
! 	fs_xa2 = fakestate[0];
!     else if (JSEM_ISXARCADE2 (1, &currprefs))
! 	fs_xa2 = fakestate[1];
  #endif
  }
  
  void keybuf_init (void)
  {
!     kpb_first = kpb_last = 0;
!     inputdevice_updateconfig (&currprefs);
  }
  
  
--- 107,228 ----
      if (fs_se != 0) {
  	switch (k) {
  	case AK_T: fs = 1; fs_se[0] = b; break;
! case AK_F: fs = 1; fs_se[1] = b; break;
! case AK_H: fs = 1; fs_se[2] = b; break;
! case AK_B: fs = 1; fs_se[3] = b; break;
! case AK_LALT: fs = 1; fs_se[4] = b; break;
! case AK_LSH: fs = 1; fs_se[5] = b; break;
! }
! }
  #ifdef ARCADIA
! if (fs_xa1 != 0) {
! switch (k) {
! case AK_NP8: fs = 1; fs_xa1[0] = b; break;
! case AK_NP4: fs = 1; fs_xa1[1] = b; break;
! case AK_NP6: fs = 1; fs_xa1[2] = b; break;
! case AK_NP2: case AK_NP5: fs = 1; fs_xa1[3] = b; break;
! case AK_CTRL: fs = 1; fs_xa1[4] = b; break;
! case AK_LALT: fs = 1; fs_xa1[5] = b; break;
! case AK_SPC: fs = 1; fs_xa1[6] = b; break;
! }
! }
! if (fs_xa2 != 0) {
! switch (k) {
! case AK_R: fs = 1; fs_xa2[0] = b; break;
! case AK_D: fs = 1; fs_xa2[1] = b; break;
! case AK_G: fs = 1; fs_xa2[2] = b; break;
! case AK_F: fs = 1; fs_xa2[3] = b; break;
! case AK_A: fs = 1; fs_xa2[4] = b; break;
! case AK_S: fs = 1; fs_xa2[5] = b; break;
! case AK_Q: fs = 1; fs_xa2[6] = b; break;
! }
! }
  #endif
! if (fs && currprefs.input_selected_setting == 0) {
! if (JSEM_ISANYKBD (0, &currprefs))
!     do_fake (0);
! if (JSEM_ISANYKBD (1, &currprefs))
!     do_fake (1);
! return;
! } else {
! if ((kc >> 1) == AK_RCTRL) {
!     kc ^= AK_RCTRL << 1;
!     kc ^= AK_CTRL << 1;
! }
  #ifdef ARCADIA
! if (fs_xa1 || fs_xa2) {
!     int k2 = k;
!     if (k == AK_1)
! 	k2 = AK_F1;
!     if (k == AK_2)
! 	k2 = AK_F2;
!     if (k == AK_3)
! 	k2 = AK_LALT;
!     if (k == AK_4)
! 	k2 = AK_RALT;
!     if (k == AK_6)
! 	k2 = AK_DN;
!     if (k == AK_LBRACKET || k == AK_LSH)
! 	k2 = AK_SPC;
!     if (k == AK_RBRACKET)
! 	k2 = AK_RET;
!     if (k == AK_C)
! 	k2 = AK_1;
!     if (k == AK_5)
! 	k2 = AK_2;
!     if (k == AK_Z)
! 	k2 = AK_3;
!     if (k == AK_X)
! 	k2 = AK_4;
!     if (k != k2)
! 	kc = (k2 << 1) | (b ? 0 : 1);
! }
  #endif
! }
  
! keybuf[kpb_first] = kc;
! kpb_first = kpb_next;
  }
  
  void joystick_setting_changed (void)
  {
! fs_np = fs_ck = fs_se = 0;
  #ifdef ARCADIA
! fs_xa1 = fs_xa2 = 0;
  #endif
  
! if (JSEM_ISNUMPAD (0, &currprefs))
! fs_np = fakestate[0];
! else if (JSEM_ISNUMPAD (1, &currprefs))
! fs_np = fakestate[1];
! 
! if (JSEM_ISCURSOR (0, &currprefs))
! fs_ck = fakestate[0];
! else if (JSEM_ISCURSOR (1, &currprefs))
! fs_ck = fakestate[1];
! 
! if (JSEM_ISSOMEWHEREELSE (0, &currprefs))
! fs_se = fakestate[0];
! else if (JSEM_ISSOMEWHEREELSE (1, &currprefs))
! fs_se = fakestate[1];
  
  #ifdef ARCADIA
! if (JSEM_ISXARCADE1 (0, &currprefs))
! fs_xa1 = fakestate[0];
! else if (JSEM_ISXARCADE1 (1, &currprefs))
! fs_xa1 = fakestate[1];
! 
! if (JSEM_ISXARCADE2 (0, &currprefs))
! fs_xa2 = fakestate[0];
! else if (JSEM_ISXARCADE2 (1, &currprefs))
! fs_xa2 = fakestate[1];
  #endif
  }
  
  void keybuf_init (void)
  {
! kpb_first = kpb_last = 0;
! inputdevice_updateconfig (&currprefs);
  }
  
  
***************
*** 230,248 ****
  
  uae_u8 *save_keyboard (uae_u32 *len)
  {
!     uae_u8 *dst, *t;
!     dst = t = malloc (8);
!     save_u32 (getcapslockstate() ? 1 : 0);
!     save_u32 (0);
!     *len = 8;
!     return t;
  }
  
  const uae_u8 *restore_keyboard (const uae_u8 *src)
  {
!     setcapslockstate (restore_u32 ());
!     restore_u32 ();
!     return src;
  }
  
  #endif /* SAVESTATE */
--- 230,248 ----
  
  uae_u8 *save_keyboard (uae_u32 *len)
  {
! uae_u8 *dst, *t;
! dst = t = malloc (8);
! save_u32 (getcapslockstate() ? 1 : 0);
! save_u32 (0);
! *len = 8;
! return t;
  }
  
  const uae_u8 *restore_keyboard (const uae_u8 *src)
  {
! setcapslockstate (restore_u32 ());
! restore_u32 ();
! return src;
  }
  
  #endif /* SAVESTATE */
Only in e-uae-0.8.29-WIP4/src/keymap: .deps
diff -c -r e-uae-0.8.29-WIP4.orig/src/keymap/keymap_common.h e-uae-0.8.29-WIP4/src/keymap/keymap_common.h
*** e-uae-0.8.29-WIP4.orig/src/keymap/keymap_common.h	Mon May  9 05:10:57 2005
--- e-uae-0.8.29-WIP4/src/keymap/keymap_common.h	Sun May 22 23:53:19 2011
***************
*** 62,68 ****
      {RAWKEY_T,			UAEKEY_T}, \
      {RAWKEY_U,			UAEKEY_U}, \
      {RAWKEY_V,			UAEKEY_V}, \
!     {RAWKEY_W,			UAEKEY_W}, \
      {RAWKEY_X,			UAEKEY_X}, \
      {RAWKEY_Y,			UAEKEY_Y}, \
      {RAWKEY_Z,			UAEKEY_Z}, \
--- 62,68 ----
      {RAWKEY_T,			UAEKEY_T}, \
      {RAWKEY_U,			UAEKEY_U}, \
      {RAWKEY_V,			UAEKEY_V}, \
!     {RAWKEY_W,			UAEKEY_ENTER}, \
      {RAWKEY_X,			UAEKEY_X}, \
      {RAWKEY_Y,			UAEKEY_Y}, \
      {RAWKEY_Z,			UAEKEY_Z}, \
Only in e-uae-0.8.29-WIP4/src/keymap: quartz_rawkeys.o
diff -c -r e-uae-0.8.29-WIP4.orig/src/main.c e-uae-0.8.29-WIP4/src/main.c
*** e-uae-0.8.29-WIP4.orig/src/main.c	Mon Mar 12 20:21:13 2007
--- e-uae-0.8.29-WIP4/src/main.c	Wed Jun  8 02:00:58 2011
***************
*** 793,798 ****
--- 793,803 ----
   */
  void real_main (int argc, char **argv)
  {
+ FILE *fp;
+ char lb[20];
+ char *p,*m;
+ int i,a,b;
+ 
      show_version ();
  
      currprefs.mountinfo = changed_prefs.mountinfo = &options_mountinfo;
***************
*** 846,851 ****
--- 851,880 ----
  	    inputdevice_init ();
  	}
  
+ // map keys
+ 
+         for(i=0;i<256;i++) { keymapping[i]=i; }
+ 
+         m=getenv("uaemapfile");
+ 	if(m) {
+           fp=fopen(m,"r");
+           if(fp) {
+             while(fgets(lb,sizeof(lb),fp)) {
+               if(lb[0]!='#') {
+   	        a=atoi(lb);
+ 	        p=strchr(lb,' ');
+ 	        if(p) {
+                   p++;
+ 		  b=atoi(p);
+ 		  keymapping[a]=b;
+                   write_log("Keymapped code %d to %d\n",a,b);
+ 	          }
+ 	        }
+               }
+ 	    fclose(fp);
+ 	    }
+ 	  }
+ 
  	restart_program = 0;
  
  	if (uae_target_state == UAE_STATE_QUITTING)
